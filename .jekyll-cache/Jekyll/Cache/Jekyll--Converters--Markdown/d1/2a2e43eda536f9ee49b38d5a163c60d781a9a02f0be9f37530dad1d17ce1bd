I"^P<p><img src="/attachments/201712/mp3.jpeg" alt="" />
有个不好意思的坏习惯，经常在网上下载一些MP3音乐，大家可别学我，请努力支持正版。<br />
很多不同时间、不同来源的MP3，一般采用了不同的命名规则，或者干脆就是混乱的命名，比如一串谁也看不懂的数字，感觉这些起名字的人实在是不走心。<br />
但管理起来或者欣赏起来，这些杂乱的名字就实在太令人恼火了。自己写了一个小程序，读取MP3音乐中的标签(Taginfo)信息，这些信息一般是压制MP3的时候直接从CD中得到并且保存到MP3文件的，然后用这些信息重新命名MP3文件，我当前采用的方式是“艺术家+曲名.mp3”,源码内很清楚，如果有不同的需求可以自己再修改。</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python
# -*- coding: utf-8 -*-
#usage: ./mp3rename.py  ~/mp3/*mp3
#prepare: pip install mutagen
</span>
<span class="kn">import</span> <span class="nn">sys</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">locale</span>
<span class="kn">import</span> <span class="nn">re</span>
<span class="kn">from</span> <span class="nn">struct</span> <span class="kn">import</span> <span class="o">*</span>

<span class="kn">from</span> <span class="nn">optparse</span> <span class="kn">import</span> <span class="n">OptionParser</span>
<span class="kn">from</span> <span class="nn">mutagen.mp3</span> <span class="kn">import</span> <span class="n">MP3</span>

<span class="k">def</span> <span class="nf">hexdump</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">b</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">),</span> <span class="mi">16</span><span class="p">):</span>
        <span class="n">lin</span> <span class="o">=</span> <span class="p">[</span><span class="n">c</span> <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">s</span><span class="p">[</span><span class="n">b</span> <span class="p">:</span> <span class="n">b</span> <span class="o">+</span> <span class="mi">16</span><span class="p">]]</span>
        <span class="n">hxdat</span> <span class="o">=</span> <span class="s">' '</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="s">'%02X'</span> <span class="o">%</span> <span class="nb">ord</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">lin</span><span class="p">)</span>
        <span class="n">pdat</span> <span class="o">=</span> <span class="s">''</span><span class="p">.</span><span class="n">join</span><span class="p">((</span><span class="n">c</span> <span class="k">if</span> <span class="mi">32</span> <span class="o">&lt;=</span> <span class="nb">ord</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mi">126</span> <span class="k">else</span> <span class="s">'.'</span> <span class="p">)</span><span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">lin</span><span class="p">)</span>
        <span class="k">print</span> <span class="s">'  %04x: %-48s %s'</span> <span class="o">%</span> <span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">hxdat</span><span class="p">,</span> <span class="n">pdat</span><span class="p">)</span>
    <span class="k">print</span>

<span class="k">def</span> <span class="nf">ustr2str</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
	<span class="n">tstr</span> <span class="o">=</span> <span class="sa">b</span><span class="s">''</span>
	<span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">s</span><span class="p">:</span>
		<span class="n">n</span><span class="o">=</span><span class="nb">ord</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
		<span class="n">tstr</span> <span class="o">=</span> <span class="n">tstr</span><span class="o">+</span><span class="nb">chr</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
	<span class="k">return</span> <span class="n">tstr</span>
			
<span class="k">def</span> <span class="nf">gb2utf</span><span class="p">(</span><span class="n">sstr</span><span class="p">):</span>
	<span class="k">return</span> <span class="n">ustr2str</span><span class="p">(</span><span class="n">sstr</span><span class="p">).</span><span class="n">decode</span><span class="p">(</span><span class="s">'gbk'</span><span class="p">).</span><span class="n">encode</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">muReadMp3ID</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
    <span class="n">audio</span> <span class="o">=</span> <span class="n">MP3</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>
    <span class="k">if</span> <span class="s">'TPE1'</span> <span class="ow">in</span> <span class="n">audio</span><span class="p">:</span>
        <span class="n">s1Artist</span><span class="o">=</span><span class="n">audio</span><span class="p">[</span><span class="s">'TPE1'</span><span class="p">].</span><span class="n">text</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">s1Artist</span><span class="o">=</span><span class="s">""</span>
    <span class="k">if</span> <span class="s">'TIT2'</span> <span class="ow">in</span> <span class="n">audio</span><span class="p">:</span> 
        <span class="n">s1Title</span><span class="o">=</span><span class="n">audio</span><span class="p">[</span><span class="s">'TIT2'</span><span class="p">].</span><span class="n">text</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">s1Title</span><span class="o">=</span><span class="s">""</span>
    <span class="k">try</span><span class="p">:</span>
    	<span class="n">sArtist</span><span class="o">=</span><span class="n">gb2utf</span><span class="p">(</span><span class="n">s1Artist</span><span class="p">)</span>
    	<span class="n">sTitle</span><span class="o">=</span><span class="n">gb2utf</span><span class="p">(</span><span class="n">s1Title</span><span class="p">)</span>
    <span class="k">except</span><span class="p">:</span>
    	<span class="n">sArtist</span><span class="o">=</span><span class="n">s1Artist</span>
    	<span class="n">sTitle</span><span class="o">=</span><span class="n">s1Title</span>
    <span class="k">if</span> <span class="n">sTitle</span><span class="o">==</span><span class="s">""</span><span class="p">:</span>
        <span class="n">sTitle</span><span class="o">=</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">splitext</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">basename</span><span class="p">(</span><span class="n">filename</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
    <span class="c1">#print audio["TRCK"].text[0]
</span>    <span class="n">sArtist</span><span class="o">=</span><span class="n">sArtist</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">'/'</span><span class="p">,</span><span class="s">'_'</span><span class="p">)</span>
    <span class="n">sTitle</span><span class="o">=</span><span class="n">sTitle</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">'/'</span><span class="p">,</span><span class="s">'_'</span><span class="p">)</span>
    <span class="n">pathname</span><span class="o">=</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">pathname</span> <span class="o">!=</span> <span class="s">""</span><span class="p">:</span>
        <span class="n">newname</span><span class="o">=</span><span class="n">pathname</span><span class="o">+</span><span class="s">"/"</span><span class="o">+</span><span class="n">sArtist</span><span class="o">+</span><span class="s">"_"</span><span class="o">+</span><span class="n">sTitle</span><span class="o">+</span><span class="s">".mp3"</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">newname</span><span class="o">=</span><span class="n">sArtist</span><span class="o">+</span><span class="s">"_"</span><span class="o">+</span><span class="n">sTitle</span><span class="o">+</span><span class="s">".mp3"</span>
    <span class="n">newname</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">sub</span><span class="p">(</span><span class="s">'[: ]'</span><span class="p">,</span><span class="s">'_'</span><span class="p">,</span><span class="n">newname</span><span class="p">)</span>
    <span class="k">print</span> <span class="n">filename</span><span class="p">,</span><span class="s">" =&gt; "</span><span class="p">,</span><span class="n">newname</span>
    <span class="n">os</span><span class="p">.</span><span class="n">rename</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="n">newname</span><span class="p">)</span>
    
<span class="k">def</span> <span class="nf">main</span><span class="p">(</span><span class="n">argv</span><span class="p">):</span>
    <span class="n">parser</span> <span class="o">=</span> <span class="n">OptionParser</span><span class="p">()</span>
    <span class="p">(</span><span class="n">options</span><span class="p">,</span> <span class="n">args</span><span class="p">)</span> <span class="o">=</span> <span class="n">parser</span><span class="p">.</span><span class="n">parse_args</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">:])</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">args</span><span class="p">:</span>
        <span class="k">raise</span> <span class="nb">SystemExit</span><span class="p">(</span><span class="n">parser</span><span class="p">.</span><span class="n">print_help</span><span class="p">()</span> <span class="ow">or</span> <span class="mi">1</span><span class="p">)</span>

    <span class="k">for</span> <span class="n">filename</span> <span class="ow">in</span> <span class="n">args</span><span class="p">:</span>
			<span class="n">muReadMp3ID</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>	

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">main</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">)</span>
</code></pre></div></div>
<p>因为使用了mutagen代码包，所以使用之前要先安装一下<code class="language-plaintext highlighter-rouge">pip install mutagen</code>。另外要注意，有个别歌曲内置就没有taginfo,当然现在这种情况很少见，我只见过2首特别情况，这种情况的话，程序将只在源文件名之前增加”_“。</p>

<p>很多使用目前比较火的音乐app下载的歌曲，后缀是m4a,是MP4标准中的音频格式。这种方式有很多优点，诸如压缩率更高、同样容量音质更好，可以加密等等，这里不做技术科普，网上有很多。然后为了应对这种文件的情况，改写了类似程序来完成m4a文件的批量改名，考虑很多的随身听实际上是以mp3为主的，这里就不合并到一个程序了。m4arename.py分享如下：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python
# -*- coding: utf-8 -*-
#./m4arename.py  ~/m4a/*
#prepare: pip install mutagen
</span>

<span class="kn">import</span> <span class="nn">sys</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">locale</span>
<span class="kn">import</span> <span class="nn">struct</span>

<span class="kn">from</span> <span class="nn">optparse</span> <span class="kn">import</span> <span class="n">OptionParser</span>
<span class="kn">from</span> <span class="nn">mutagen.mp4</span> <span class="kn">import</span> <span class="n">MP4</span>

<span class="k">def</span> <span class="nf">hexdump</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">b</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">),</span> <span class="mi">16</span><span class="p">):</span>
        <span class="n">lin</span> <span class="o">=</span> <span class="p">[</span><span class="n">c</span> <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">s</span><span class="p">[</span><span class="n">b</span> <span class="p">:</span> <span class="n">b</span> <span class="o">+</span> <span class="mi">16</span><span class="p">]]</span>
        <span class="n">hxdat</span> <span class="o">=</span> <span class="s">' '</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="s">'%02X'</span> <span class="o">%</span> <span class="nb">ord</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">lin</span><span class="p">)</span>
        <span class="n">pdat</span> <span class="o">=</span> <span class="s">''</span><span class="p">.</span><span class="n">join</span><span class="p">((</span><span class="n">c</span> <span class="k">if</span> <span class="mi">32</span> <span class="o">&lt;=</span> <span class="nb">ord</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mi">126</span> <span class="k">else</span> <span class="s">'.'</span> <span class="p">)</span><span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">lin</span><span class="p">)</span>
        <span class="k">print</span> <span class="s">'  %04x: %-48s %s'</span> <span class="o">%</span> <span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">hxdat</span><span class="p">,</span> <span class="n">pdat</span><span class="p">)</span>
    <span class="k">print</span>

<span class="k">def</span> <span class="nf">ustr2str</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
	<span class="n">tstr</span> <span class="o">=</span> <span class="sa">b</span><span class="s">''</span>
	<span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">s</span><span class="p">:</span>
		<span class="n">n</span><span class="o">=</span><span class="nb">ord</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
		<span class="n">tstr</span> <span class="o">=</span> <span class="n">tstr</span><span class="o">+</span><span class="nb">chr</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
	<span class="k">return</span> <span class="n">tstr</span>
			
<span class="k">def</span> <span class="nf">gb2utf</span><span class="p">(</span><span class="n">sstr</span><span class="p">):</span>
	<span class="k">return</span> <span class="n">ustr2str</span><span class="p">(</span><span class="n">sstr</span><span class="p">).</span><span class="n">decode</span><span class="p">(</span><span class="s">'gbk'</span><span class="p">).</span><span class="n">encode</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">m4afilename</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
	<span class="k">if</span> <span class="ow">not</span> <span class="n">filename</span><span class="p">.</span><span class="n">endswith</span><span class="p">(</span><span class="s">'.m4a'</span><span class="p">):</span>
		<span class="k">print</span> <span class="s">"Error filetype, only .m4a allowed"</span>
		<span class="k">return</span>
	<span class="n">audio</span><span class="o">=</span><span class="n">MP4</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>
	<span class="n">stitle</span><span class="o">=</span><span class="n">audio</span><span class="p">[</span><span class="s">'</span><span class="se">\xa9</span><span class="s">nam'</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
	<span class="n">sartist</span><span class="o">=</span><span class="n">audio</span><span class="p">[</span><span class="s">'</span><span class="se">\xa9</span><span class="s">ART'</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
	<span class="n">newfilename</span><span class="o">=</span><span class="n">sartist</span><span class="o">+</span><span class="n">stitle</span><span class="o">+</span><span class="s">".m4a"</span>
	<span class="n">newfilename</span><span class="o">=</span><span class="n">newfilename</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">"/"</span><span class="p">,</span><span class="s">"-"</span><span class="p">)</span>
	<span class="k">print</span> <span class="s">"["</span><span class="o">+</span><span class="n">newfilename</span><span class="o">+</span><span class="s">"]"</span>	
	<span class="n">os</span><span class="p">.</span><span class="n">rename</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="n">newfilename</span><span class="p">)</span>
	<span class="c1">#os.system(doCmdStr)
</span>	

    
<span class="k">def</span> <span class="nf">main</span><span class="p">(</span><span class="n">argv</span><span class="p">):</span>
    <span class="n">parser</span> <span class="o">=</span> <span class="n">OptionParser</span><span class="p">()</span>
    <span class="p">(</span><span class="n">options</span><span class="p">,</span> <span class="n">args</span><span class="p">)</span> <span class="o">=</span> <span class="n">parser</span><span class="p">.</span><span class="n">parse_args</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">:])</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">args</span><span class="p">:</span>
        <span class="k">raise</span> <span class="nb">SystemExit</span><span class="p">(</span><span class="n">parser</span><span class="p">.</span><span class="n">print_help</span><span class="p">()</span> <span class="ow">or</span> <span class="mi">1</span><span class="p">)</span>

    <span class="k">for</span> <span class="n">filename</span> <span class="ow">in</span> <span class="n">args</span><span class="p">:</span>
			<span class="n">m4afilename</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>	

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">main</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">)</span>
</code></pre></div></div>
:ET