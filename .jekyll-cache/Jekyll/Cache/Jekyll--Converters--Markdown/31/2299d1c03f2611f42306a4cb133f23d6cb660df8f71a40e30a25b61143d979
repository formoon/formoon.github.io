I"T	<h4 id="欠拟合和过拟合">欠拟合和过拟合</h4>
<p>几乎所有的复杂方程都存在结果跟预期差异的情况，越复杂的方程，这种情况就越严重。这里面通常都是算法造成的，当然也存在数据集的个体差异问题。<br />
所以”欠拟合“和”过拟合“是机器学习过程中重要的调优指标之一。<br />
如图所示：<br />
<img src="https://raw.githubusercontent.com/formoon/formoon.github.io/master/attachments/201801/ml-nn/overfitting1.png" alt="" /><br />
以篇(2)中房价的程序为例，上图中间的那幅图，是比较满意的一种结果。对于我们给出的所有样本，模型的预测结果同实际房价比较贴切的“拟合”。<br />
左图则是“欠拟合”，有些样本和房价能对应的比较好，有些预测出来的值同事实则差距较大，“预测不大准”。<br />
右侧图是“过拟合”，过拟合是很尴尬的一种情况，对于所有的训练样本都拟合非常好，但投产实际的数据就差别巨大。过拟合也很严重，在很多角度上比欠拟合更严重。如果在以前手工编写算法的年代，出现这种情况，模型的调优将会非常麻烦。并且在一个研发周期比较长的项目中，因为往往是到了投产阶段才发现过拟合问题，造成的损失也会比较大。<br />
在分类问题中，一样会出现这两个问题，如图：<br />
<img src="https://raw.githubusercontent.com/formoon/formoon.github.io/master/attachments/201801/ml-nn/overfitting2.png" alt="" /><br />
同样，中间的图表示拟合较好。左侧图表示欠拟合，右侧图表示过拟合。<br />
欠拟合和过拟合情况发生之后，传统的办法有以下几种手段解决：</p>
<ol>
  <li>减少我们的参数数量，降低方程的维度。这个方法对于图像识别这种情况显然不适用，因为维度是固定的。</li>
  <li>样本本身归一化做的不好。样本归一化我们前面说了，正常情况都应当先做归一化再进行训练。</li>
  <li>通常增加样本的数量对改善“欠拟合”和“过拟合”都有效果。但是在工程中，样本就是钱啊。</li>
  <li>手工实现的算法中，可以添加归一化参数(Regularization Parameter)，通常称为λ。在TensorFlow这种成熟框架中，则使用了Dropout机制。</li>
</ol>
:ET