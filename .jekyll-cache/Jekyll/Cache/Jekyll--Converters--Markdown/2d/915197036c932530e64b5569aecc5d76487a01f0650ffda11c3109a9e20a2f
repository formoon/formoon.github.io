I"p<p><img src="https://raw.githubusercontent.com/formoon/formoon.github.io/master/attachments/201712/angular.jpeg" alt="" />
昨天一个话题说关于AngularJS2以后版本的两个小技巧，不料引出了另外一个话题，话题起始很简单：<br />
“很多的前端框架并不复杂，比如JQuery,引入即用，实时看到效果，多好。到了Angular2一直到现在的版本5，一点改进没有，还要编译，还要部署，原有的JS脚本也不能用了。”<br />
细想起来，这个话题的帽子并不小，至少牵扯出来一个关键，AngularJS2及以后的版本，其框架之下的JS代码，跟HTML中<code class="language-plaintext highlighter-rouge">&lt;script&gt;</code>块之中的JS代码，到底是什么关系？<br />
我试着来回答一下：</p>
<ul>
  <li>首先，在AngularJS2框架之中实际使用的是ES6,全称ECMAScript6，是Javascript的下一个版本。官方的例子则是基本采用TS,全称TypeScript,是JS的一个超集。之所以用起来没有明显区别的感觉，因为的确从常用语法上，跟当前使用的JS,或者叫ES5 JS,差别很小，但即便再小，那也算的上不同的语言了。</li>
  <li>为什么采用新的语言，而不是沿用当前的ES5，官网和社区已经有了很多解释了，新语言当然有新语言的优势，比如定义变量，可以指定类型，而在程序中用错类型，则会在编译过程中就给出警告，不至于等到上线了才发现BUG。这些优势非常多，这里就不画蛇添足了。反正你肯定能理解，新当然有新的好处。</li>
  <li>既然采用了新的语言，为了跟当前的浏览器系统兼容，当然就有一个翻译过程，准确的说，甭管是TS还是ES6,甚至将来可能的ES7,在当下，都要翻译成ES5,才能在当前流行的浏览器之中运行。这个翻译，行话上讲，也就是“编译”。</li>
  <li>事实上，编译不仅仅干这么一点事，很多的优化工作、查错工作，也是在这个阶段完成的，比如你使用了没有定义的变量、函数；比如你用错了函数类型；比如你使用了某个函数库但只是用了其中一小部分，那么多没用的部分应当排除掉避免占用宝贵的下载带宽，这些都是在编译过程做到的。</li>
  <li>好了，既然经过了这么复杂的动作，这个编译也必不可少，那么实际上答案已经出来了：那就是，很多原有理所应当存在的东西，就比如你在HTML中定义的JS对象、变量、函数，那些都是在执行环节，浏览器中才存在的。而在编译阶段，那些东西还只是停留在字符状态，AngularJS当然并不知道他们存在，也就无法直接的、像原来我们使用HTML-JS一样来使用它们了，这就如同上面那张图，看上去海天一色，互相映衬，但在根本上，它们是在两个世界。</li>
</ul>
:ET